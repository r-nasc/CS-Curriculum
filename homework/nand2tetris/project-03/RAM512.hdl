// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
    RAM64(in=in, load=r0, address=address[3..8], out=r0out);
    RAM64(in=in, load=r1, address=address[3..8], out=r1out);
    RAM64(in=in, load=r2, address=address[3..8], out=r2out);
    RAM64(in=in, load=r3, address=address[3..8], out=r3out);
    RAM64(in=in, load=r4, address=address[3..8], out=r4out);
    RAM64(in=in, load=r5, address=address[3..8], out=r5out);
    RAM64(in=in, load=r6, address=address[3..8], out=r6out);
    RAM64(in=in, load=r7, address=address[3..8], out=r7out);
    Mux8Way16(a=r0out, b=r1out, c=r2out, d=r3out, e=r4out, f=r5out, g=r6out, h=r7out, sel=address[0..2], out=out);
}